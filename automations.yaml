- id: salon1
  alias: IM salon (gauche) et amp. salon off -> amp. salon on
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_livingroom_left
      click_type: single
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: light.AmpouleSalon
      state: 'off'
    - condition: state
      entity_id: light.livingroom_led_strip
      state: 'off'
    - condition: or
      conditions:
      - condition: state
        entity_id: light.bar_led_strip
        state: 'off'
      - condition: state
        entity_id: light.AmpouleCuisine
        state: 'on'
  action:
  - service: script.turn_on
    entity_id: script.turn_on_livingroom
#############################################################################
- id: salon2
  alias: IM salon (CGL) -> amp. salon + bande tv faible
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_livingroom_left
      click_type: long
  condition: []
  action:
  - service: script.turn_on
    entity_id: script.turn_on_livingroom_weak
#############################################################################
- id: salon3
  alias: IM salon (gauche) et amp. salon on -> amp. salon off
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_livingroom_left
      click_type: single
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: light.AmpouleSalon
      state: 'on'
    - condition: state
      entity_id: light.livingroom_led_strip
      state: 'on'
    - condition: and
      conditions:
      - condition: state
        entity_id: light.bar_led_strip
        state: 'on'
      - condition: state
        entity_id: light.AmpouleCuisine
        state: 'off'
  action:
  - service: script.turn_on
    entity_id: script.turn_off_livingroom
#############################################################################
- id: salon4
  alias: IM salon (droit) et amp. bureau off -> amp. bureau on
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_livingroom_right
      click_type: single
  condition:
  - condition: state
    entity_id: light.AmpouleBureau
    state: 'off'
  action:
  - service: script.turn_on
    entity_id: script.turn_on_desk
#############################################################################
- id: salon5
  alias: IM salon (CDL) -> amp. bureau faible
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_livingroom_right
      click_type: long
  condition: []
  action:
  - service: script.turn_on
    entity_id: script.turn_on_desk_weak
#############################################################################
- id: salon6
  alias: IM salon (droit) et amp. bureau on -> amp. bureau off
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_livingroom_right
      click_type: single
  condition:
  - condition: state
    entity_id: light.AmpouleBureau
    state: 'on'
  action:
    service: script.turn_on
    entity_id: script.turn_off_desk
#############################################################################
- id: salon7
  alias: IM salon (CD) et salon off -> amp. salon & salon on
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_livingroom_both
      click_type: both
  condition:
  - condition: state
    entity_id: light.Lumiere_Salon
    state: 'off'
  action:
    - service: script.turn_on
      entity_id: script.turn_on_livingroom
    - service: script.turn_on
      entity_id: script.turn_on_desk
#############################################################################
- id: salon8
  alias: IM salon (CD) et salon on -> amp. salon & bureau off
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_livingroom_both
      click_type: both
  condition:
  - condition: state
    entity_id: light.Lumiere_Salon
    state: 'on'
  action:
    - service: script.turn_on
      entity_id: script.turn_off_livingroom
    - service: script.turn_on
      entity_id: script.turn_off_desk
#############################################################################
- id: salon9
  alias: IM salon (CDL) et amp. salon off -> amp. salon faible et bureau faible
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_livingroom_both
      click_type: long_both
  condition: []
  action:
  - service: script.turn_on
    entity_id: script.turn_on_livingroom_weak
  - service: script.turn_on
    entity_id: script.turn_on_desk_weak
#############################################################################
- id: salon10
  alias: IP salon (CS) et amp. salon off -> amp. salon on
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.portable_livingroom
      click_type: single
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: light.Lumiere_Salon
      state: 'off'
  action:
  - service: script.turn_on
    entity_id: script.turn_on_livingroom
  - service: script.turn_on
    entity_id: script.turn_on_livingroom_led_strip
  - service: script.turn_on
    entity_id: script.turn_on_desk
#############################################################################
- id: salon11
  alias: IP salon (CL) -> amp. salon faible
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.portable_livingroom
      click_type: long_click_press
  condition: []
  action:
  - service: script.turn_on
    entity_id: script.turn_on_livingroom_weak
  - service: script.turn_on
    entity_id: script.turn_on_livingroom_led_strip_weak
  - service: script.turn_on
    entity_id: script.turn_on_desk_weak
#############################################################################
- id: salon12
  alias: IP salon et amp. salon on -> amp. salon off
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.portable_livingroom
      click_type: single
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: light.Lumiere_Salon
      state: 'on'
    - condition: and
      conditions:
      - condition: state
        entity_id: light.bar_led_strip
        state: 'on'
      - condition: state
        entity_id: light.AmpouleCuisine
        state: 'off'
  action:
  - service: script.turn_on
    entity_id: script.turn_off_livingroom
  - service: script.turn_on
    entity_id: script.turn_off_desk
#############################################################################
- id: salon13
  alias: TV éteinte & lumières éteintes -> gateway jusqu'à allumage lumière
  trigger:
    platform: template 
    value_template: >
      {{ states.media_player.lg_oled.attributes.entity_picture == null }}
  condition:
  - condition: state
    entity_id: light.AmpouleCuisine
    state: 'off'
  - condition: state
    entity_id: light.Lumiere_Salon
    state: 'off'
  - condition: template
    value_template: >
      {{ states('sensor.illumination_gateway') | float(default = 0) < 200 }}
  action:
  - service: light.turn_on
    entity_id: light.gateway
    data:
      rgb_color: [255, 120, 19]
      brightness: 255
  - service: light.turn_on
    entity_id: light.livingroom_led_strip, light.bar_led_strip
    data:
      kelvin: 3000
      brightness: 75
  - wait_template: >
      {{ is_state('light.AmpouleSalon', 'on') 
        or is_state('light.AmpouleCuisine', 'on') 
        or is_state('light.AmpouleCouloir', 'on')
        or states.media_player.lg_oled.attributes.entity_picture != null
      }}
  - service: light.turn_off
    entity_id: light.gateway, light.livingroom_led_strip, light.bar_led_strip
#############################################################################
- id: salon14
  alias: Température < 18°C -> notification
  trigger:
    platform: time_pattern
    minutes: '/15'
  condition:
  - condition: numeric_state
    entity_id: sensor.temperature_livingroom
    below: 18
  - condition: template
    value_template: >
      {{ (states.sensor.temperature_livingroom.state | float %0.1 )| round(1) <= 0.1 }}
  action:
  - service: notify.antoine_notification
    data_template:
      title: "Home Assistant"
      message: "Température salon : {{ states('sensor.temperature_livingroom') }}°C."
    data:
      data:
        tag: temperature-notification
#############################################################################
- id: salon15
  alias: réassociation prises connectées zigbee
  trigger:
    platform: time_pattern
    minutes: '/30'
  action:
  - service: zha.permit
    data:
      duration: 15
  # TV
  - service: zha.set_zigbee_cluster_attribute
    data:
      ieee: 04:cf:8c:df:3c:76:4c:51
      cluster_id: 0x0000
      endpoint_id: 1
      attribute: 0x0001
      value: 1
  # multimedia
  - service: zha.set_zigbee_cluster_attribute
    data:
      ieee: 04:cf:8c:df:3c:76:3c:01
      cluster_id: 0x0000
      endpoint_id: 1
      attribute: 0x0001
      value: 1
  # m365
  - service: zha.set_zigbee_cluster_attribute
    data:
      ieee: 04:cf:8c:df:3c:75:a4:ae
      cluster_id: 0x0000
      endpoint_id: 1
      attribute: 0x0001
      value: 1
#############################################################################
- id: salon16
  alias: arrêt charge m365 85%
  # when m365 power usage gets to ~73 W (~ 77% charge)
  trigger:
    platform: numeric_state
    entity_id: sensor.m365_power_usage
    above: 50.0
  condition:
  - condition: numeric_state
    entity_id: sensor.m365_power_usage
    below: 160
  action:
  - service: script.turn_on
    data:
      entity_id: script.m365_limit_charge
############################################################################# 
- id: cuisine1
  alias: IM cuisine (gauche) et amp. cuisine off -> amp. cuisine on 
  trigger:
    platform: event 
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_kitchen_left
      click_type: single
  condition:
  - condition: state
    entity_id: light.AmpouleCuisine
    state: 'off'
  - condition: or
    conditions:
    - condition: state
      entity_id: light.gateway
      state: 'off'
    - condition: state
      entity_id: light.gateway
      state: 'unavailable'
  action:
    service: script.turn_on
    entity_id: script.turn_on_kitchen
#############################################################################
- id: cuisine2
  alias: IM cuisine (CGL) -> amp. cuisine faible
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_kitchen_left
      click_type: long
  condition: []
  action:
  - service: script.turn_on
    entity_id: script.turn_on_kitchen_weak
#############################################################################
- id: cuisine3
  alias: IM cuisine (gauche) et amp. cuisine on -> amp. cuisine off
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_kitchen_left
      click_type: single
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: light.AmpouleCuisine
      state: 'on'
    - condition: state
      entity_id: light.gateway
      state: 'on'
  action:
    service: script.turn_on
    entity_id: script.turn_off_kitchen
#############################################################################
- id: cuisine4
  alias: IM cuisine (droit) et salon off -> lumiere salon on
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_kitchen_right
      click_type: single
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: light.Lumiere_Salon
      state: 'off'
    - condition: state
      entity_id: light.livingroom_led_strip
      state: 'off'
  action:
  - service: script.turn_on
    entity_id: script.turn_on_livingroom
  - service: script.turn_on
    entity_id: script.turn_on_desk
#############################################################################
- id: cuisine5
  alias: IM cuisine (CDL) -> salon faible
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_kitchen_right
      click_type: long
  condition: []
  action:
  - service: script.turn_on
    entity_id: script.turn_on_livingroom_weak
  - service: script.turn_on
    entity_id: script.turn_on_desk_weak
#############################################################################
- id: cuisine6
  alias: IM cuisine (droit) et salon on -> salon off
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_kitchen_right
      click_type: single
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: light.Lumiere_Salon
      state: 'on'
    - condition: state
      entity_id: light.livingroom_led_strip
      state: 'on'
  action:
  - service: script.turn_on
    entity_id: script.turn_off_livingroom
  - service: script.turn_on
    entity_id: script.turn_off_desk
#############################################################################
- id: cuisine7
  alias: IM cuisine (CD) et amp. cuisine ou salon off -> amp. cuisine & salon on
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_kitchen_both
      click_type: both
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: light.AmpouleCuisine
      state: 'off'
    - condition: state
      entity_id: light.Lumiere_Salon
      state: 'off'
    - condition: state
      entity_id: light.livingroom_led_strip
      state: 'off'
    - condition: state
      entity_id: light.bar_led_strip
      state: 'off'
  action:
    - service: script.turn_on
      entity_id: script.turn_on_kitchen
    - service: script.turn_on
      entity_id: script.turn_on_livingroom
#############################################################################
- id: cuisine8
  alias: IM cuisine (CD) et amp. cuisine et salon on -> amp. cuisine & salon off
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_kitchen_both
      click_type: both
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: light.AmpouleCuisine
      state: 'on'
    - condition: state
      entity_id: light.Lumiere_Salon
      state: 'on'
    - condition: state
      entity_id: light.livingroom_led_strip
      state: 'on'
    - condition: state
      entity_id: light.bar_led_strip
      state: 'on'
  action:
    - service: script.turn_on
      entity_id: script.turn_off_kitchen
    - service: script.turn_on
      entity_id: script.turn_off_livingroom
#############################################################################
- id: cuisine9
  alias: IM cuisine (CDL) et amp. cuisine off -> amp. cuisine faible et salon faible
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_kitchen_both
      click_type: long_both
  condition: []
  action:
  - service: script.turn_on
    entity_id: script.turn_on_kitchen_weak
  - service: script.turn_on
    entity_id: script.turn_on_livingroom_weak
#############################################################################
- id: cuisine10
  alias: Fin cycle machine à laver -> notification passerelle
  trigger:
    platform: state
    entity_id: sensor.lave_linge_washer_job_state
    to: 'finish'
  action:
  - service: script.turn_on
    entity_id: script.gateway_notification_washing_machine_cycle_finished
  - service: script.turn_on
    entity_id: script.gateway_notification_washing_machine_cycle_finished_killer
#############################################################################
- id: chambre1
  alias: IM chambre (CS) et amp. chambre off -> Chambre on
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_bedroom
      click_type: single
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: light.AmpouleChambre
      state: 'off'
    - condition: or
      conditions:
      - condition: state
        entity_id: light.LampeChevet
        state: 'off'
      - condition: state
        entity_id: light.LampeChevet
        state: 'unavailable'
  action:
    service: script.turn_on
    entity_id: script.turn_on_bedroom
#############################################################################
- id: chambre2
  alias: IM chambre (CL) -> Chambre on doux
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_bedroom
      click_type: long
  action:
    service: script.turn_on
    entity_id: script.turn_on_bedroom_weak
#############################################################################
- id: chambre3
  alias: IM chambre (CD) -> Chambre on fort
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_bedroom
      click_type: double
  action:
    service: script.turn_on
    entity_id: script.turn_on_bedroom_strong
#############################################################################
- id: chambre4
  alias: IM chambre (CS) et amp. chambre on -> Chambre off
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_bedroom
      click_type: single
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: light.AmpouleChambre
        state: 'on'
      - condition: state
        entity_id: light.LampeChevet
        state: 'on'
  action:
    service: script.turn_on
    entity_id: script.turn_off_bedroom
##############################################################################
- id: chambre5
  alias: IP chambre (CS) et amp. chambre off -> Chambre on
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.portable_bedroom
      click_type: single
  condition:
  - condition: state
    entity_id: light.AmpouleChambre
    state: 'off'
  - condition: state
    entity_id: light.LampeChevet
    state: 'off'
  action:
    service: script.turn_on
    entity_id: script.turn_on_bedroom
#############################################################################
- id: chambre6
  alias: IP chambre (CL) -> Chambre on doux
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.portable_bedroom
      click_type: long_click_press
  action:
    service: script.turn_on
    entity_id: script.turn_on_bedroom_weak
#############################################################################
- id: chambre7
  alias: IP chambre (CD) -> Chambre on fort
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.portable_bedroom
      click_type: double
  action:
    service: script.turn_on
    entity_id: script.turn_on_bedroom_strong
#############################################################################
- id: chambre8
  alias: IP chambre (CS) et amp. chambre on -> Chambre off
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.portable_bedroom
      click_type: single
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: light.AmpouleChambre
        state: 'on'
      - condition: state
        entity_id: light.LampeChevet
        state: 'on'
  action:
    service: script.turn_on
    entity_id: script.turn_off_bedroom
#############################################################################
- id: chambre9
  alias: Chauffage chambre on et porte ouverte -> Notification fermeture porte
  trigger:
    platform: time_pattern
    minutes: '/15'
  condition:
  # moins de 14°C à l'extérieur
  - condition: numeric_state
    entity_id: sensor.weather_temperature
    below: 14
  # Apres 23h & avant 1h
  - condition: template
    value_template: >
      {% set hour = as_timestamp(now()) | timestamp_custom("%H") | float %}
      {{ hour >= 23 or hour < 1 }}
  # Porte chambre ouverte
  - condition: state
    entity_id: binary_sensor.door_sensor_bedroom
    state: 'on'
  action:
  - service: notify.antoine_anh_tv
    data_template:
      message: "Chauffage chambre démarré, fermer la porte !"
    data:
      data:
        tag: warming_bedroom-notification
#############################################################################
- id: chambre10
  alias: Limiteur batterie Antoine
  trigger:
    platform: template
    value_template: >
      {% set at_home = states.device_tracker.smartphone_antoine.state == 'home' %}
      {% set charged_to_minimum = states('sensor.honor10_battery_level') | int-1 > 60 %}
      {% set charged_to_limit = states('sensor.honor10_battery_level') | int-1 > states.input_number.battery_charging_percentage_limit_antoine.state | int  %}
      {% set daytime = (now().hour >= 10 and now().hour <=22) %}
      {% set one_hour_before_wake_up = state_attr('sensor.honor_10_next_alarm', 'Time in Milliseconds') | int/1000 | int -(1*3600) %} 
      {% set currently_one_hour_before_wake_up = as_timestamp(now()) >= one_hour_before_wake_up %}
      {{ not at_home or (charged_to_limit or (charged_to_minimum and not daytime and not currently_one_hour_before_wake_up)) }}
  action:
  - service: switch.turn_off
    data:
      entity_id: switch.antoine_phone_smart_plug
#############################################################################
- id: chambre11
  alias: Limiteur batterie Antoine (off->on)
  trigger:
    platform: template
    value_template: >
      {% set at_home = states.device_tracker.smartphone_antoine.state == 'home' %}
      {% set charged_to_minimum = states('sensor.honor10_battery_level') | int+1 >= 60 %}
      {% set charged_to_limit = states('sensor.honor10_battery_level') | int+1 >= states.input_number.battery_charging_percentage_limit_antoine.state | int  %}
      {% set daytime = (now().hour >= 10 and now().hour <=22) %}
      {% set one_hour_before_wake_up = state_attr('sensor.honor_10_next_alarm', 'Time in Milliseconds') | int/1000 | int -(1*3600) %}
      {% set currently_one_hour_before_wake_up = as_timestamp(now()) >= one_hour_before_wake_up %}
      {{ at_home and (not charged_to_minimum or (not charged_to_limit and ( daytime or currently_one_hour_before_wake_up))) }}
  action:
    service: switch.turn_on
    data:
      entity_id: switch.antoine_phone_smart_plug
#############################################################################
- id: chambre12
  alias: Limiteur Batterie Anh
  trigger:
    platform: template
    value_template: >
      {% set at_home = states.device_tracker.smartphone_anh.state == 'home' %}
      {% set charged_to_minimum = states('sensor.oppo_battery_level') | int-1 > 60 %}
      {% set charged_to_limit = states('sensor.oppo_battery_level') | int-1 > states.input_number.battery_charging_percentage_limit_anh.state | int  %}
      {% set daytime = (now().hour >= 10 and now().hour <=22) %}
      {% set one_hour_before_wake_up = state_attr('sensor.oppo_10_next_alarm', 'Time in Milliseconds') | int/1000 | int -(1*3600) %} 
      {% set currently_one_hour_before_wake_up = as_timestamp(now()) >= one_hour_before_wake_up %}
      {{ not at_home or (charged_to_limit or (charged_to_minimum and not daytime and not currently_one_hour_before_wake_up)) }}
  action:
    service: switch.turn_off
    data:
      entity_id: switch.anh_phone_smart_plug
#############################################################################
- id: chambre13
  alias: Limiteur batterie Anh (off->on)
  trigger:
    platform: template
    value_template: >
      {% set at_home = states.device_tracker.smartphone_anh.state == 'home' %}
      {% set charged_to_minimum = states('sensor.oppo_battery_level') | int+1 >= 60 %}
      {% set charged_to_limit = states('sensor.oppo_battery_level') | int+1 >= states.input_number.battery_charging_percentage_limit_anh.state | int  %}
      {% set daytime = (now().hour >= 10 and now().hour <=22) %}
      {% set one_hour_before_wake_up = state_attr('sensor.oppo_10_next_alarm', 'Time in Milliseconds') | int/1000 | int -(1*3600) %}
      {% set currently_one_hour_before_wake_up = as_timestamp(now()) >= one_hour_before_wake_up %}
      {{ at_home and (not charged_to_minimum or ( not charged_to_limit and ( daytime or currently_one_hour_before_wake_up))) }}
  action:
    service: switch.turn_on
    data:
      entity_id: switch.anh_phone_smart_plug
#############################################################################
- id: chambre14
  alias: Lecture média chromecast audio -> allumage enceintes
  trigger:
  - entity_id: media_player.chambre
    platform: state
    to: 'playing'
  action:
    service: switch.turn_on
    data:
      entity_id: switch.speakers_smart_plug
#############################################################################
- id: chambre15
  alias: Arret lecture média chromecast audio -> extinction enceintes
  trigger:
  - entity_id: media_player.chambre
    platform: state
    from: 'playing'
  action:
  - delay: 00:00:20
  - condition: template
    value_template: >
      {{ not is_state('media_player.chambre', 'playing') }}
  - service: switch.turn_off
    data:
      entity_id: switch.speakers_smart_plug
#############################################################################
- id: chambre16
  alias: Lecture média chromecast audio et extinction lumière chambre -> démarrage timer musique
  trigger:
  - entity_id: light.lumiere_chambre
    platform: state
    to: 'off'
  condition:
  - condition: state
    entity_id: media_player.chambre
    state: 'playing'
# handle this light going unavailable regularly
  - condition: state
    entity_id: light.lampechevet
    state: 'off'
  action:
    service: script.turn_on
    entity_id: script.speakers_timer_start
#############################################################################
- id: chambre17
  alias: Décompte extinction enceintes chambres
  trigger:
    platform: time_pattern
    minutes: '/1'
  condition:
  - condition: state
    entity_id: script.speakers_timer_start
    state: 'on'
  action:
  - service: input_number.set_value
    data_template:
      entity_id: input_number.speakers_turnoff_timer
      value: "{{ states.input_number.speakers_turnoff_timer.state | float-1 }}"
  - condition: numeric_state
    entity_id: input_number.speakers_turnoff_timer
    below: 1
  - service: input_number.set_value
    data_template:
      entity_id: input_number.speakers_turnoff_timer
      value: 90
  - service: media_player.turn_off
    entity_id: media_player.chambre, media_player.ytube_music_player
  - service: script.turn_off
    entity_id: script.speakers_timer_start
#############################################################################
- id: chambre18
  alias: Volume musique chambre diminue si lumière éteinte
  trigger:
  - entity_id: light.lumiere_chambre
    platform: state
    to: 'off'
  condition:
  - condition: state
    entity_id: media_player.chambre
    state: 'playing'
# handle this light going unavailable regularly
  - condition: state
    entity_id: light.lampechevet
    state: 'off'
  action:
    service: script.turn_on
    entity_id: script.decrease_bedroom_music_volume
#############################################################################
- id: chambre19
  alias: 20 minutes avant réveil + chambre froide -> allumage plaid chauffant
  trigger:
    platform: time_pattern
    minutes: '/1'
  condition:
  - condition: numeric_state
    entity_id: sensor.temperature_bedroom
    below: 21
  - condition: template
    value_template: >
      {% set list_next_wake_up_time =  state_attr('sensor.honor_10_next_alarm', 'Time in Milliseconds') | int/1000 | int -(20*60), state_attr('sensor.oppo_10_next_alarm', 'Time in Milliseconds') | int/1000 | int -(20*60) %}
      {% if list_next_wake_up_time | min < now().timestamp() | int %}
      {% set twenty_minute_before_wake_up = list_next_wake_up_time | max %}
      {% else %}
      {% set twenty_minute_before_wake_up = list_next_wake_up_time | min %}
      {% endif %}
      {{ twenty_minute_before_wake_up - as_timestamp(now()) | round(0) == 0}}
  action:
  - service: script.turn_on
    entity_id: script.heating_blanket_limit_duration
#############################################################################
- id: chambre20
  alias: présence chambre + chambre froide -> allumage plaid chauffant
  trigger:
    platform: state
    entity_id: light.lampechevet
    from: 'off'
    to: 'on'
    for: '00:05:00'
  condition:
  - condition: numeric_state
    entity_id: sensor.temperature_bedroom
    below: 21
  action:
  - service: script.turn_on
    entity_id: script.heating_blanket_limit_duration
#############################################################################
- id: chambre21
  alias: script plaid chauffant annulé -> extinction plaid chauffant
  trigger:
    platform: state
    entity_id: script.heating_blanket_limit_duration
    from: 'on'
    to: 'off'
  condition:
  action:
  - service: switch.turn_off
    entity_id: switch.heating_blanket_on_off
  - service: timer.cancel
    entity_id: timer.heating_blanket
#############################################################################
- id: couloir1
  alias: Détecteur mouv. couloir on -> amp. couloir on
  trigger:
    platform: event
    event_type: xiaomi_aqara.motion
    event_data:
      entity_id: binary_sensor.motion_sensor_hall
  condition:  
    condition: or
    conditions:
    # turn on hall light except if night time and no light on
    - condition: template
      value_template: >
        {% set nb_lights_on = states.light | selectattr('state','eq','on') | list | count %}
        {{ nb_lights_on != 0 and (nb_lights_on != 3 or states('light.lumiere_miroir_salle_de_bain') != 'on')}}
    - condition: time
      before: "01:00:00"
      after: "08:00:00"
  action:
  - service: light.turn_on
    entity_id: light.AmpouleCouloir
    data_template:
      brightness: >
        {% if states.light.lumiere_salon.attributes.brightness is defined %}
          {{ states.light.lumiere_salon.attributes.brightness | multiply(0.5) | int }}
        {% else %}
          {% if now().hour >= 22 %}
            25
          {% elif now().hour < 9 %}
            15
          {% else %}
            180
          {% endif %}
        {% endif %}
      kelvin: >
        {% if states.light.lumiere_salon.attributes.brightness is defined %}
          {{ (1000000/states.light.lumiere_salon.attributes.color_temp) | int}}
        {% else %}
          {% if now().hour >= 22 %}
            3000
          {% elif now().hour < 9 %}
            2500
          {% else %}
            4500
          {% endif %}
        {% endif %}
  - wait_template: >
      {{ is_state('binary_sensor.motion_sensor_hall', 'off') }}
  - service: light.turn_off
    entity_id: light.AmpouleCouloir
#############################################################################
- id: couloir2
  alias: Détecteur mouv. couloir on et nuit -> amp. mirroir sdb on
  trigger:
    platform: event
    event_type: xiaomi_aqara.motion
    event_data:
      entity_id: binary_sensor.motion_sensor_hall
  condition:  
  # all lights are off (or unavailable...)
  - condition: template
    value_template: >
      {% set nb_lights_on = states.light | selectattr('state','eq','on') | list | count %}
      {{ nb_lights_on == 0 or (nb_lights_on == 3 and states('light.lumiere_miroir_salle_de_bain') == 'on')}}
  - condition: time
    after: "01:00:00"
    before: "08:00:00"
  action:
  - service: light.turn_on
    entity_id: light.lumiere_miroir_salle_de_bain
    data:
      brightness_pct: 20
      kelvin: 2000
  - wait_template: >
      {{ is_state('binary_sensor.motion_sensor_hall', 'off') }}
  - service: light.turn_off
    entity_id: light.lumiere_miroir_salle_de_bain
#############################################################################
- id: couloir3
  alias: IM salon (CDDroit) ET couloir off -> amp. couloir on ET autom. couloir off
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_livingroom_right
      click_type: double
  action:
  - service: light.turn_on
    entity_id: light.AmpouleCouloir
  - service: automation.turn_off
    entity_id: automation.detecteur_mouv_couloir_off_ampoule_couloir_off
#############################################################################
- id: couloir4
  alias: IM salon (CDDroit) ET couloir on -> amp. couloir off ET autom. couloir on
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_livingroom_right
      click_type: double
  condition:
  - condition: state
    entity_id: light.AmpouleCouloir
    state: 'on'
  action:
  - service: light.turn_off
    entity_id: light.AmpouleCouloir
  - service: automation.turn_on
    entity_id: automation.detecteur_mouv_couloir_off_ampoule_couloir_off
#############################################################################
- id: bathroom1
  alias: IM sdb (CS) et amp. sdb off -> sdb on
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_bathroom
      click_type: single
  condition:
  - condition: state
    entity_id: light.AmpouleSalleDeBain
    state: 'off'
  action:
    service: script.turn_on
    entity_id: script.turn_on_bathroom
#############################################################################
- id: bathroom2
  alias: IM sdb (CL) -> sdb faible
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_bathroom
      click_type: long
  condition: []
  action:
    service: script.turn_on
    entity_id: script.turn_on_bathroom_weak
#############################################################################
- id: bathroom3
  alias: IM sdb (CD) -> sdb max
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_bathroom
      click_type: double
  condition: []
  action:
    service: script.turn_on
    entity_id: script.turn_on_bathroom_strong
#############################################################################
- id: bathroom4
  alias: IM sdb (CS) et amp. sdb on -> sdb off
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_bathroom
      click_type: single
  condition:
  - condition: state
    entity_id: light.AmpouleSalleDeBain
    state: 'on'
  action:
  - service: script.turn_on
    entity_id: script.turn_off_bathroom
#############################################################################
- id: toilets1
  alias: IM toilettes (CS) et amp. toilettes off -> toilettes on
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_toilets
      click_type: single
  condition:
  - condition: state
    entity_id: light.AmpouleToilettes
    state: 'off'
  action:
    service: script.turn_on
    entity_id: script.turn_on_toilets
#############################################################################
- id: toilets2
  alias: IM toilettes (CL) -> toilettes faible
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_toilets
      click_type: long
  condition: []
  action:
    service: script.turn_on
    entity_id: script.turn_on_toilets_weak
#############################################################################
- id: toilets3
  alias: IM toilettes (CD) -> toilettes max
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_toilets
      click_type: double
  condition: []
  action:
    service: script.turn_on
    entity_id: script.turn_on_toilets_strong
#############################################################################
- id: toilets4
  alias: IM toilettes (CS) et amp. toilettes on -> toilettes off
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.wall_toilets
      click_type: single
  condition:
  - condition: state
    entity_id: light.AmpouleToilettes
    state: 'on'
  action:
    service: light.turn_off
    entity_id: light.AmpouleToilettes
#############################################################################
- id: routine1
  alias: Routine réveil
  trigger:
    platform: time_pattern
    minutes: '/1'
  condition:
  # all lights are off (or unavailable...)
  - condition: template
    value_template: >
      {{ states.light | selectattr('state','eq','on') | list | count == 0 }}
  - condition: template
    value_template: >
      {% set list_next_wake_up_time =  state_attr('sensor.honor_10_next_alarm', 'Time in Milliseconds') | default(0, true) | int/1000 | int -(1*60), state_attr('sensor.oppo_next_alarm', 'Time in Milliseconds') | default(0, true) | int/1000 | int -(1*60)%}
      {% if list_next_wake_up_time | min < now().timestamp() | int %}
      {% set one_minute_before_wake_up = list_next_wake_up_time | max %}
      {% else %}
      {% set one_minute_before_wake_up = list_next_wake_up_time | min %}
      {% endif %}
      {{ one_minute_before_wake_up - as_timestamp(now()) | round(0) == 0 }}
  - condition: state
    entity_id: group.admin_devices
    state: 'home'
  action:
  - service: light.turn_on
    entity_id: light.LampeChevet
    data:
      rgb_color: [255, 0, 0]
      brightness_pct: 1
  - delay: 00:01:00
  - service: light.turn_on
    entity_id: light.LampeChevet
    data:
      rgb_color: [255,100,0]
      brightness_pct: 25
      transition: 420
  - delay: 00:07:00
  - service: light.turn_on
    entity_id: light.LampeChevet
    data:
      rgb_color: [255,230,200]
      brightness_pct: 40
      transition: 240
  - delay: 00:04:00
  - service: light.turn_on
    entity_id: light.LampeChevet
    data:
      rgb_color: [255,230,200]
      brightness_pct: 60
      transition: 25
  - delay: 00:00:05
  - wait_template: >
      {{ is_state('binary_sensor.motion_sensor_hall', 'on') }}
  - delay: 00:00:01
  - service: light.turn_on
    entity_id: light.AmpouleToilettes
    data:
      brightness: 20
      kelvin: 3000
  - delay: 00:00:01
  - service: light.turn_on
    entity_id: light.AmpouleSalleDeBain
    data:
      brightness: 20
      kelvin: 3000
  - service: light.turn_on
    entity_id: light.lumiere_miroir_salle_de_bain
    data:
      brightness_pct: 20
      kelvin: 3000
  # ne continuer que si cet interrupteur est activé
  - condition: state
    entity_id: input_boolean.morning_routine_enable_livingroom_kitchen
    state: 'on'
  - delay: 00:01:00
  - service: script.turn_on
    entity_id: script.turn_on_livingroom, script.turn_on_desk, script.turn_on_kitchen
  # ne continuer que si cet interrupteur est activé
  - condition: state
    entity_id: input_boolean.morning_routine_enable_leaving_time_alarm
    state: 'on'
# --------------------------------------
# calculer l'écart en minutes entre l'heure actuelle et l'heure de départ au travail paramétrée. 
# Si ce temps est suffisamment faible, on est dans le cas d'un jour de travail et on continue sur la routine.
# --------------------------------------
  - condition: template
    value_template: >
      {% set departure_time_minutes = (states.input_datetime.home_departure_time.attributes.timestamp | timestamp_custom("%H", false) | int * 60 
        + states.input_datetime.home_departure_time.attributes.timestamp | timestamp_custom("%M", false) | int ) %}
      {% set minutes_since_midnight = (as_timestamp(now()) | timestamp_custom("%H") | int * 60 + (as_timestamp(now()) | timestamp_custom("%M") | int)) %}
      {% set start_of_day = as_timestamp(now()) | string | int - (minutes_since_midnight | int*60) %}
      {% set departure_timestamp = (start_of_day + departure_time_minutes*60) %}
      {% set delta = (departure_timestamp - as_timestamp(now()) | int) | int/60 %}
      {{ delta < 60 and delta >= 0 }}
# --------------------------------------
# attendre l'heure de départ au travail moins 4 minutes
# --------------------------------------
  - wait_template: >
      {% set four_minutes_before_departure_time = states.input_datetime.home_departure_time.attributes.timestamp | int -(4*60) %}
      {% set time_now = as_timestamp(strptime(states.sensor.date_time.state, '%Y-%m-%d, %H:%M'))| timestamp_custom("%H%M", false) %}
      {{ time_now  == four_minutes_before_departure_time | timestamp_custom("%H%M", false)}}
  - service: light.turn_on
    entity_id: light.gateway
    data:
      rgb_color: [255, 127, 0]
      brightness_pct: 60
  - delay: 00:01:00
  - service: light.turn_on
    entity_id: light.gateway
    data:
      rgb_color: [255, 84, 0]
      brightness_pct: 75
  - delay: 00:01:00
  - service: light.turn_on
    entity_id: light.gateway
    data:
      rgb_color: [255, 42, 0]
      brightness_pct: 90
  - delay: 00:01:00
  - service: light.turn_on
    entity_id: light.gateway
    data:
      rgb_color: [255, 0, 0]
      brightness_pct: 100
  - delay: 00:06:00
  - service: light.turn_off
    entity_id: all
#############################################################################
- id: 'routine2'
  alias: Absence Antoine -> chargeur off
  trigger:
  - entity_id: device_tracker.smartphone_antoine
    platform: state
    from: 'home'
    to: 'not_home'
    for: 00:10:00
  condition: []
  action:
    service: switch.turn_off
    data:
      entity_id: switch.antoine_phone_smart_plug
#############################################################################
- id: 'routine3'
  alias: Absence Anh -> chargeur off
  trigger:
  - entity_id: device_tracker.smartphone_anh
    platform: state
    from: 'home'
    to: 'not_home'
    for: 00:10:00
  condition: []
  action:
    service: switch.turn_off
    data:
      entity_id: switch.anh_phone_smart_plug
#############################################################################
# - id: 'routine4'
#   alias: Retour Antoine -> chargeur on
#   trigger:
#   - entity_id: device_tracker.smartphone_antoine
#     platform: state
#     from: 'not_home'
#     to: 'home'
#   condition:
#     condition: template
#     value_template: >
#       {% set charged_to_minimum = states('sensor.honor10_battery_level') | int+1 >= 60 %}
#       {% set charged_to_limit = states('sensor.honor10_battery_level') | int+1 >= states.input_number.battery_charging_percentage_limit_antoine.state | int  %}
#       {% set daytime = (now().hour >= 11 and now().hour <=22) %}
#       {% set one_hour_before_wake_up = states.input_datetime.morning_routine_date_time.attributes.timestamp | int -(1*3600) %}
#       {% set currently_one_hour_before_wake_up = as_timestamp(now()) >= one_hour_before_wake_up %}
#       {{ not charged_to_minimum or ( not charged_to_limit and ( daytime or currently_one_hour_before_wake_up ) ) }}
#   action:
#     service: switch.turn_on
#     data:
#       entity_id: switch.antoine_phone_smart_plug
# #############################################################################
# - id: 'routine5'
#   alias: Retour Anh -> chargeur on
#   trigger:
#   - entity_id: device_tracker.smartphone_anh
#     platform: state
#     from: 'not_home'
#     to: 'home'
#   condition:
#     condition: template
#     value_template: >
#       {% set charged_to_minimum = states('sensor.oppo_battery_level') | int+1 >= 60 %}
#       {% set charged_to_limit = states('sensor.oppo_battery_level') | int+1 >= states.input_number.battery_charging_percentage_limit_anh.state | int  %}
#       {% set daytime = (now().hour >= 11 and now().hour <=22) %}
#       {% set one_hour_before_wake_up = states.input_datetime.morning_routine_date_time.attributes.timestamp | int -(1*3600) %}
#       {% set currently_one_hour_before_wake_up = as_timestamp(now()) >= one_hour_before_wake_up %}
#       {{ not charged_to_minimum or ( not charged_to_limit and ( daytime or currently_one_hour_before_wake_up ) ) }}
#   action:
#     service: switch.turn_on
#     data:
#       entity_id: switch.anh_phone_smart_plug
#############################################################################
- id: routine6
  alias: Absence appartement -> extinction lumières
  trigger:
  - entity_id: group.admin_devices
    platform: state
    from: 'home'
    to: 'not_home'
    for: 00:10:00
  action:
  - service: light.turn_off
    entity_id: all
  - service: media_player.turn_off
    entity_id: media_player.chambre
#############################################################################
- id: chauffage1
  alias: Absence appartement -> extinction chauffage
  trigger:
  - entity_id: group.admin_devices
    platform: state
    from: 'home'
    to: 'not_home'
    for: 00:10:00
  action:
  - service: climate.set_preset_mode
    target:
      entity_id: climate.livingroom, climate.desk, climate.bedroom
    data:
      preset_mode: "away"
#############################################################################
- id: chauffage2
  alias: Retour appartement -> allumage chauffage
  trigger:
  - entity_id: sensor.temperature_livingroom
    platform: state
    from: 'not_home'
    to: 'home'
  action:
  # appeler tous les plannings de type 'chauffage' à l'état 'on'
  - service: scheduler.run_action
    data_template:
      entity_id: >
        {% set ns = namespace(schedule_to_run=[]) %} 
        {% set today = now().strftime("%a") | lower %} 
        {% set schedules = states.switch | selectattr('state', 'eq', 'on') | selectattr('attributes.tags', 'eq', ['chauffage']) | map(attribute='entity_id') | list %}
        {% for schedule in schedules %}
          {% set flattenedWeekDays = state_attr(schedule, 'weekdays') | replace('weekend', "sat', 'sun") | replace('workday', "mon', 'tue', 'wed', 'thu', 'fri") %}
          {% if today in flattenedWeekDays or 'daily' in flattenedWeekDays %}
            {% set ns.schedule_to_run = ns.schedule_to_run+[schedule] %}
          {% endif %}
        {% endfor %}
        {{ ns.schedule_to_run | join(',') }}
#############################################################################
- id: ventilateur1
  alias: Ventilateur en mode expulsion air du salon
  trigger:
    platform: template 
    value_template: >
      {{ states('input_boolean.livingroom_air_expulsion') == 'on' and states('sensor.temperature_livingroom') | float >= states('sensor.weather_nantes_temperature') | float + 2 }}
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.fan_on_off
  - wait_template: >
      {{ states('input_boolean.livingroom_air_expulsion') == 'off' or states('sensor.temperature_livingroom') | float < states('sensor.weather_nantes_temperature') | float + 2 }}
  - service: switch.turn_off
    entity_id: switch.fan_on_off
#############################################################################
- id: Littiere1
  alias: Extinction TV -> activation littière
  trigger:
  - entity_id: media_player.lg_oled
    platform: state
    to: 'off'
    for: 01:00:00
  action:
    - service: litterrobot.set_sleep_mode
      data_template:
        enabled: true
        start_time: >
          {{ states("input_datetime.litter_box_sleep_mode_time") }}
      target:
        entity_id: vacuum.vaisseau_mere_litter_box
#############################################################################
- id: Littiere2
  alias: Allumage TV -> désactivation littière
  trigger:
  - entity_id: media_player.lg_oled
    platform: state
    to: 'on'
    for: 00:05:00
  action:
    service: litterrobot.set_sleep_mode
    data_template:
      enabled: true
      start_time: >
        {{ as_timestamp(now()) | timestamp_custom("%H:%M:00") }}
    target:
      entity_id: vacuum.vaisseau_mere_litter_box
#############################################################################
- id: 'camera1'
  alias: Absence + mouvement -> enregistrement caméra
  trigger:
  - entity_id: binary_sensor.camera_motion
    platform: state
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: group.admin_devices
    state: 'not_home'
  action:
  - service: script.turn_on
    entity_id: script.record_camera
  - service: notify.antoine_notification
    data_template:
      title: "Home Assistant"
      message: "Mouvement détecté : caméra déclenchée"
#############################################################################
- id: 'camera2'
  alias: Départ appartement -> détecteur mouv. caméra on
  trigger:
  - entity_id: group.admin_devices
    platform: state
    from: 'home'
    to: 'not_home'
  condition: []
  action:
    service: ffmpeg.start
    entity_id: binary_sensor.camera_motion
#############################################################################
- id: 'camera3'
  alias: Retour appartement -> détecteur mouv. caméra off
  trigger:
  - entity_id: group.admin_devices
    platform: state
    from: 'not_home'
    to: 'home'
  condition: []
  action:
    service: ffmpeg.stop
    entity_id: binary_sensor.camera_motion

###
- id: 'hack1'
  alias: lecture manuelle cluster ZLinky
  trigger:
  - platform: time_pattern
    minutes: /1
  action:
    - service: zha_toolkit.attr_read
      data:
        ieee: 00:15:8d:00:05:d2:9a:98
        endpoint: 1
        cluster: 1794
        attribute: 0
