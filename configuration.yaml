homeassistant:
  # Name of the location where Home Assistant is running
#  name: Home
  # Location required to calculate the time the sun rises and sets
#  latitude: 47.2144
#  longitude: -1.5512
  # Impacts weather/sunrise data (altitude above sea level in meters)
#  elevation: 0
  # metric for Metric, imperial for Imperial
#  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
#  time_zone: Europe/Paris
  # Customization file
  customize: !include customize.yaml
  allowlist_external_dirs:
#    - /config/ssl
    - /config/sh
  media_dirs:
    media: "/media"

# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Show the introduction message on startup.
#introduction:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
http:
#  ssl_certificate: /etc/letsencrypt/live/tranquility-base.eu/fullchain.pem
#  ssl_key: /etc/letsencrypt/live/tranquility-base.eu/privkey.pem
  use_x_forwarded_for: true
  trusted_proxies:
   - 127.0.0.1
   - 192.168.0.101

script: !include scripts.yaml
group: !include groups.yaml
automation: !include automations.yaml
scene: !include scenes.yaml

frontend:
  themes: !include_dir_merge_named themes

recorder:
  # db_url: postgresql://hass:mvtmjsun42@127.0.0.1/hass
  db_url: postgresql://hass:mvtmjsun42@192.168.0.101:5433/hass
  commit_interval: 5
  purge_keep_days: 31
  exclude:
    entities:
      - sensor.monthly_total_download_bbox
      - sensor.monthly_total_upload_bbox
      - sensor.download_bbox
      - sensor.upload_bbox
      - sensor.processor_use_percent
      - sensor.memory_use_percent
      - sensor.glances_cpu_used
      - sensor.glances_ram_used_percent
      - sensor.upload_powerhouse
      - sensor.download_powerhouse

xiaomi_aqara:
  discovery_retry: 15
  gateways:
    - key: !secret gatewayKey

switch:
  - platform: template
    switches:
      desk_heater:
        value_template: "{{ is_state('switch.sonoff_desk_heater', 'off') }}"
        turn_on:
          service: switch.turn_off
          data:
            entity_id: switch.sonoff_desk_heater
        turn_off:
          service: switch.turn_on
          data:
            entity_id: switch.sonoff_desk_heater
      livingroom_heater:
        value_template: "{{ is_state('switch.sonoff_livingroom_heater', 'off') }}"
        turn_on:
          service: switch.turn_off
          data:
            entity_id: switch.sonoff_livingroom_heater
        turn_off:
          service: switch.turn_on
          data:
            entity_id: switch.sonoff_livingroom_heater
      bedroom_heater:
        value_template: "{{ is_state('switch.sonoff_bedroom_heater', 'off') }}"
        turn_on:
          service: switch.turn_off
          data:
            entity_id: switch.sonoff_bedroom_heater
        turn_off:
          service: switch.turn_on
          data:
            entity_id: switch.sonoff_bedroom_heater

climate:
# - platform: generic_thermostat
  - platform: simple_thermostat
    name: desk
    heater: switch.desk_heater
    target_sensor: sensor.temperature_desk
    min_temp: 15
    max_temp: 22
    ac_mode: false
    # target_temp: 18
    cold_tolerance: 0.2
    hot_tolerance: 0.2
    min_cycle_duration:
      minutes: 5
    keep_alive:
      minutes: 60
    initial_hvac_mode: "heat"
    # away_temp: 16
    precision: 0.1
  - platform: simple_thermostat
    name: livingroom
    heater: switch.livingroom_heater
    target_sensor: sensor.temperature_livingroom
    min_temp: 15
    max_temp: 22
    ac_mode: false
    # target_temp: 18
    cold_tolerance: 0.2
    hot_tolerance: 0.2
    min_cycle_duration:
      minutes: 5
    keep_alive:
      minutes: 60
    initial_hvac_mode: "heat"
    # away_temp: 16
    precision: 0.1
  - platform: simple_thermostat
    name: bedroom
    heater: switch.bedroom_heater
    target_sensor: sensor.temperature_bedroom
    min_temp: 15
    max_temp: 22
    ac_mode: false
    # target_temp: 18
    cold_tolerance: 0.2
    hot_tolerance: 0.2
    min_cycle_duration:
      minutes: 5
    keep_alive:
      minutes: 60
    initial_hvac_mode: "heat"
    # away_temp: 16
    precision: 0.1

yeelight:
  devices:
#     192.168.0.120:
#       name: AmpouleSalleDeBain
    192.168.0.121:
      name: AmpouleBureau
#     192.168.0.122:
#       name: AmpouleToilettes
#     192.168.0.123:
#       name: AmpouleSalon
#     192.168.0.124:
#       name: AmpouleCouloir
#     192.168.0.125:
#       name: AmpouleCuisine
#     192.168.0.126:
#       name: AmpouleChambre
#     192.168.0.127:
#       name: LampeChevet

light:
  - platform: group
    name: Lumière Salon
    entities:
      - light.AmpouleSalon
      - light.AmpouleBureau
      - light.livingroom_led_strip
  - platform: group
    name: Lumière Chambre
    entities:
      - light.AmpouleChambre
      - light.LampeChevet
  - platform: group
    name: Lumière Miroir Salle de Bain
    entities:
      - light.bathroom_bulb_1_cwww
      - light.bathroom_bulb_2_cwww
  - platform: group
    name: Lumière Miroir Salle de Bain RGB
    entities:
      - light.bathroom_bulb_1_rgb
      - light.bathroom_bulb_2_rgb

powercalc:
  scan_interval: 00:01:00 #Each minute
  create_energy_sensors: true
  power_sensor_naming: "{}_power_usage"
  create_utility_meters: true
  energy_sensor_naming: "{}_energy_spent"

sensor:
  # - platform: file
  #   name: Activité hdd
  #   file_path: /config/sh/hddspinsensor.txt
  - platform: command_line
    name: Température CPU
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    unit_of_measurement: "°C"
    value_template: '{{ value | multiply(0.001) | round(1) }}'
  - platform: systemmonitor
    resources:
    - type: disk_use_percent
      arg: /
#    - type: disk_use_percent
#      arg: /mnt/hdd
    - type: memory_use_percent
    - type: processor_use
    - type: last_boot
  - platform: integration
    source: sensor.tv_power_usage
    name: tv_energy_spent
    unit_prefix: k
    method: left
    round: 2
  - platform: integration
    source: sensor.m365_power_usage
    name: m365_energy_spent
    unit_prefix: k
    method: left
    round: 2
  - platform: integration
    source: sensor.livingroom_multimedia_power_usage
    name: livingroom_multimedia_energy_spent
    unit_prefix: k
    round: 2
  - platform: integration
    source: sensor.heating_blanket_power_usage
    name: heating_blanket_energy_spent
    unit_prefix: k
    method: left
    round: 2
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'date_time'
      - 'date_time_iso'
      - 'time_date'
      - 'time_utc'
      - 'beat'
  - platform: derivative
    source: sensor.battery_level_antoine
    round: 1
    unit: "%/h"
    time_window: 00:15:00
  - platform: derivative
    source: sensor.battery_level_anh
    round: 1
    time_window: 60
    unit: "%/h"
    time_window: 00:15:00
  - platform: derivative
    source: sensor.lixee_zlinky_tic_energy_spent
    round: 3
    unit: "kW"
  - platform: template
    sensors:
      battery_derivative_positive_antoine:
        friendly_name: "Charge batterie Antoine"
        unit_of_measurement: '%/h'
        value_template: >
          {% if states.sensor.sensor_battery_level_antoine_derivative.state | float > 0 %}
            {{ states.sensor.sensor_battery_level_antoine_derivative.state | float }}
          {% else %}
            0
          {% endif %}
      battery_derivative_negative_antoine:
        friendly_name: "Décharge batterie Antoine"
        unit_of_measurement: '%/h'
        value_template: >
          {% if states.sensor.sensor_battery_level_antoine_derivative.state | float < 0 %}
            {{ states.sensor.sensor_battery_level_antoine_derivative.state | float }}
          {% else %}
            0
          {% endif %}
      weather_nantes_temperature:
        friendly_name: "Température Nantes"
        unit_of_measurement: '°C'
        value_template: >
          {{ state_attr('weather.nantes', 'temperature') }}
      heaters_energy_spent:
        friendly_name: Energie chauffages
        unit_of_measurement: kWh
        value_template: >
          {{ [states('sensor.livingroom_heater_energy_spent') | float,
            states('sensor.desk_heater_energy_spent') | float,
            states('sensor.bedroom_heater_energy_spent') | float]
            | sum }}
  - platform: template
    sensors:
      battery_derivative_positive_anh:
        friendly_name: "Charge batterie Anh"
        unit_of_measurement: '%/h'
        value_template: >
          {% if states.sensor.sensor_battery_level_anh_derivative.state | float > 0 %}
            {{ states.sensor.sensor_battery_level_anh_derivative.state | float }}
          {% else %}
            0
          {% endif %}
      battery_derivative_negative_anh:
        friendly_name: "Décharge batterie Anh"
        unit_of_measurement: '%/h'
        value_template: >
          {% if states.sensor.sensor_battery_level_anh_derivative.state | float < 0 %}
            {{ states.sensor.sensor_battery_level_anh_derivative.state | float }}
          {% else %}
            0
          {% endif %}
      linky_power_usage_watts:
        friendly_name: "Puissance électrique"
        unit_of_measurement: 'W'
        value_template: >
          {{ states('sensor.sensor_lixee_zlinky_tic_energy_spent_derivative') | float*1000 }}
  - platform: statistics
    name: battery_derivative_negative_antoine_statistics
    entity_id: sensor.battery_derivative_negative_antoine
    sampling_size: 4
    max_age:
      minutes: 90
  - platform: rest
    resource: http://192.168.0.101:61208/api/3/network/interface_name/enp1s0
    name: network_powerhouse
    headers:
      Accept-Encoding: ''
    value_template: 'interface: enp1s0'
    json_attributes_path: "$.enp1s0.[0]"
    json_attributes:
      - tx
      - rx
    scan_interval: 45
  - platform: rest
    resource: https://mabbox.bytel.fr/api/v1/wan/ip/stats
    name: bbox_network_rx
    headers:
      Accept-Encoding: ''
    value_template: 'interface: bbox'
    json_attributes_path: "$.[0].wan.ip.stats.rx"
    json_attributes:
      - occupation
      - bytes
    scan_interval: 12
  - platform: rest
    resource: https://mabbox.bytel.fr/api/v1/wan/ip/stats
    name: bbox_network_tx
    headers:
      Accept-Encoding: ''
    value_template: 'interface: bbox'
    json_attributes_path: "$.[0].wan.ip.stats.tx"
    json_attributes:
      - occupation
      - bytes
    scan_interval: 12
  - platform: template
    sensors:
      download_powerhouse:
        value_template: '{{ states.sensor.network_powerhouse.attributes["rx"] | multiply(0.000000954/8) | multiply(0.16666) | round(2) }}'
        unit_of_measurement: Mo/s
      upload_powerhouse:
        value_template: '{{ states.sensor.network_powerhouse.attributes["tx"] | multiply(0.000000954/8) | multiply(0.16666) | round(2) }}'
        unit_of_measurement: Mo/s
      download_bbox:
        value_template: >
          {% set rxSpeed = states.sensor.bbox_network_rx.attributes["occupation"] | multiply(0.125) | round(2) %}
          {% if rxSpeed != 125 %}
            {{ rxSpeed }}
          {% else %}
            {{ 0 }}
          {% endif %}
        unit_of_measurement: Mo/s
      total_download_bbox:
        value_template: '{{ states.sensor.bbox_network_rx.attributes["bytes"] | multiply(0.000000954) | round(2) }}'
        unit_of_measurement: Mo
      upload_bbox:
        value_template: >
          {% set rxSpeed = states.sensor.bbox_network_tx.attributes["occupation"] | multiply(0.125) | round(2) %}
          {% if rxSpeed != 125 %}
            {{ rxSpeed }}
          {% else %}
            {{ 0 }}
          {% endif %}
        unit_of_measurement: Mo/s
      total_upload_bbox:
        value_template: '{{ states.sensor.bbox_network_tx.attributes["bytes"] | multiply(0.000001) | round(2) }}'
        unit_of_measurement: Mo
  - platform: filter
    name: "filtered monthly bbox download"
    entity_id: sensor.monthly_total_download_bbox
    filters:
      - filter: time_throttle
        window_size: "00:05:00"
  - platform: filter
    name: "filtered monthly bbox upload"
    entity_id: sensor.monthly_total_upload_bbox
    filters:
      - filter: time_throttle
        window_size: "00:05:00"
  - platform: filter
    name: "filtered bbox download"
    entity_id: sensor.download_bbox
    filters:
      - filter: time_throttle
        window_size: "00:00:15"
  - platform: filter
    name: "filtered bbox upload"
    entity_id: sensor.upload_bbox
    filters:
      - filter: time_throttle
        window_size: "00:00:15"
  - platform: filter
    name: "filtered rpi processor use percent"
    entity_id: sensor.processor_use_percent
    filters:
      - filter: time_throttle
        window_size: "00:01:00"
  - platform: filter
    name: "filtered rpi memory use percent"
    entity_id: sensor.memory_use_percent
    filters:
      - filter: time_throttle
        window_size: "00:01:00"
  - platform: filter
    name: "filtered powerhouse processor use percent"
    entity_id: sensor.glances_cpu_used
    filters:
      - filter: time_throttle
        window_size: "00:01:00"
  - platform: filter
    name: "filtered powerhouse memory use percent"
    entity_id: sensor.glances_ram_used_percent
    filters:
      - filter: time_throttle
        window_size: "00:00:15"
  - platform: filter
    name: "filtered powerhouse upload"
    entity_id: sensor.upload_powerhouse
    filters:
      - filter: time_throttle
        window_size: "00:00:15"
  - platform: filter
    name: "filtered powerhouse download"
    entity_id: sensor.download_powerhouse
    filters:
      - filter: time_throttle
        window_size: "00:01:00"
  - platform: history_stats
    name: time_on_smartphone_screen_antoine
    entity_id: input_boolean.smartphone_screen_antoine
    state: "on"
    type: time
    start: >
      {% if now().hour | int >= 4 %}
        {{ now().replace(hour=4, minute=0, second=0) }}
      {% else %}
        {{ now().replace(day=now().day-1, hour=4, minute=0, second=0) }}
      {% endif %}
    end: "{{ now() }}"
  - platform: history_stats
    name: time_on_smartphone_screen_anh
    entity_id: input_boolean.smartphone_screen_anh
    state: "on"
    type: time
    start: >
      {% if now().hour | int >= 4 %}
        {{ now().replace(hour=4, minute=0, second=0) }}
      {% else %}
        {{ now().replace(day=now().day-1, hour=4, minute=0, second=0) }}
      {% endif %}
    end: "{{ now() }}"
  - platform: history_stats
    name: time_at_home
    entity_id: group.admin_devices
    state: "home"
    type: time
    start: "{{ now().replace(hour=0, minute=0, second=0) }}"
    end: "{{ now() }}"
  - platform: powercalc
    entity_id: switch.desk_heater
    fixed:
      power: 720
  - platform: powercalc
    entity_id: switch.livingroom_heater
    fixed:
      power: 900
  - platform: powercalc
    entity_id: switch.bedroom_heater
    fixed:
      power: 950


template:
  - sensor:
  # sensor qui retire la consommation de tous les appareils suivis (prises connectées, chauffages...) à la consommation totale du linky
  # afin d'avoir un suivi du reste de la consommation uniquement
    - name: monthly_linky_filtered_for_tracked_devices_energy_spent
      state: >
        {{ states('sensor.monthly_linky_energy_spent') | float - states.sensor | selectattr('attributes.meter_period', 'eq', 'monthly') | selectattr('attributes.device_class', 'eq', 'energy') | selectattr('entity_id', 'ne', 'sensor.monthly_linky_energy_spent') | selectattr('entity_id', 'ne', 'sensor.monthly_heaters_energy_spent') | map(attribute='state') | map('float') | sum }}
      unit_of_measurement: kWh
      device_class: energy
      state_class: total_increasing

utility_meter:
  monthly_tv_power_usage:
    source: sensor.tv_energy_spent
    cycle: monthly
  monthly_multimedia_power_usage:
    source: sensor.livingroom_multimedia_energy_spent
    cycle: monthly
  monthly_m365_power_usage:
    source: sensor.m365_energy_spent
    cycle: monthly
  monthly_heating_blanket_power_usage:
    source: sensor.heating_blanket_energy_spent
    cycle: monthly
  monthly_fan_power_usage:
    source: sensor.fan_power_usage
    cycle: monthly
  monthly_total_download_bbox:
    source: sensor.total_download_bbox
    cycle: monthly
  monthly_total_upload_bbox:
    source: sensor.total_upload_bbox
    cycle: monthly
  monthly_heaters_energy_spent:
    source: sensor.heaters_energy_spent
    cycle: monthly
  daily_heaters_energy_spent:
    source: sensor.heaters_energy_spent
    cycle: daily
  monthly_linky_energy_spent:
    source: sensor.lixee_zlinky_tic_energy_spent
    cycle: monthly
  daily_linky_energy_spent:
    source: sensor.lixee_zlinky_tic_energy_spent
    cycle: daily

input_datetime:
  morning_routine_date_time:
    name: Heure du réveil-matin
    has_date: true
    has_time: true
  home_departure_time:
    name: Heure de départ de la maison
    has_date: false
    has_time: true

input_number:
  battery_charging_percentage_limit_antoine:
    name: Limite charge smartphone Antoine
    unit_of_measurement: "%"
    min: 0
    max: 100
    step: 1
    mode: box
  battery_charging_percentage_limit_anh:
    name: Limite charge smartphone Anh
    unit_of_measurement: "%"
    min: 0
    max: 100
    step: 1
    mode: box
  speakers_turnoff_timer:
    name: Délai extinction enceintes
    unit_of_measurement: "minutes"
    min: 0
    max: 240
    step: 5
    mode: slider
  speakers_target_volume:
    name: Vol. cible
    unit_of_measurement: "%"
    min: 0
    max: 100
    step: 1
    mode: slider
  speakers_volume_change_duration:
    name: Durée transition
    unit_of_measurement: "minutes"
    min: 0
    max: 120
    step: 1
    mode: box
# hidden
  speakers_start_volume:
    name: Volume initial des enceintes
    min: 0
    max: 100
    step: 1
    mode: box

timer:
  m365_charge_timer:
    name: temps de charge restant
    duration: '01:10:00'

wake_on_lan:

notify:
  - platform: webostv
    host: 192.168.0.10
    name: LG_OLED55B7
  - platform: html5
    name: Antoine_notification
    vapid_pub_key: BPXPgvtb_hedm1UXjYk1zQi75CCQCEyeK5cE-HnM4WjR5FCB69q3i9ct9WYLfHJ9-Vw1EuAPqxTbmNQJKmxs4S8
    vapid_prv_key: D4BIhir6k0CFn_tkSmrRe2Yx6yY4DO3bCfkB07D58Gc
    vapid_email: jouet.antoine@gmail.com
  - name: antoine_anh_tv
    platform: group
    services:
      - service: antoine_notification
      - service: lg_oled55b7

# google_assistant:
  # project_id: assistantautomationintegration
  # api_key: !secret googleCloudApiKey
  # exposed_domains:
    # - light
    # - media_player
    # - switch
  # entity_config:
    # media_player.lg_oled55b7:
      # expose: true
    # script.sunset_bedroom:
      # expose: true
    # group.all_automations:
      # expose: false

ffmpeg:
  ffmpeg_bin: /usr/bin/ffmpeg

camera:
  - platform: ffmpeg
    input: !secret cameraStream

stream:

binary_sensor:
  - platform: ffmpeg_motion
    name: camera_motion
    input: !secret cameraStream
    changes: 14
    extra_arguments: -vf scale=640:480

zha:
  device_config:
    00:12:4b:00:24:c0:9c:ee-1:    # format: {ieee}-{endpoint_id}
      type: 'switch'              # corrected device type
    00:12:4b:00:24:c0:1d:95-1:
      type: 'switch'
    00:12:4b:00:24:c2:09:97-1:
      type: 'switch'

zha_toolkit:
